name: ci

on:
    pull_request:
        branches:
            - master

jobs:
    commitlint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout üõé
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Run commitlinter üëÄ
              uses: wagoid/commitlint-github-action@v3
    lint_and_tests:
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis
                ports:
                    - '6379:6379'
                options: --entrypoint redis-server
            postgresql:
                image: postgres:latest
                ports:
                    - 5432:5432
                env:
                    POSTGRES_PASSWORD: yourpassword
                    POSTGRES_USER: lucid
                    POSTGRES_DB: lucid
        steps:
            - name: Checkout üõé
              uses: actions/checkout@v2

            # Setup Go
            - name: Setup Go
              uses: actions/setup-go@v2
              with:
                  go-version: '1.16.0' # The Go version to download (if necessary) and use.

            - name: Run Temporal tests üß™
              run: |
                  cd packages/temporal
                  yarn test

            - name: Setup node env üèó
              uses: actions/setup-node@v2.1.2
              with:
                  node-version: 16.8.0
                  check-latest: true

            #Modify key version to force cache reset
            - name: Cache node_modules üì¶
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies üë®üèª‚Äçüíª
              run: yarn install

            - name: Build packages üë∑
              run: yarn run build:tsc

            - name: Run linter üëÄ
              run: yarn run lint

            - name: Cache Go dependencies and build artifacts üì¶
              uses: actions/cache@v2
              with:
                  # In order:
                  # * Module download cache
                  # * Build cache (Linux)
                  # * Build cache (Mac)
                  # * Build cache (Windows)
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                      ~/Library/Caches/go-build
                      %LocalAppData%\go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Run Server tests üß™
              run: |
                  cd packages/server
                  yarn test
              env:
                  REDIS_CONNECTION: 'local'
                  REDIS_HOST: '127.0.0.1'
                  REDIS_PORT: '6379'
                  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
                  GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
                  GOOGLE_GEOCODING_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
                  HOST: '0.0.0.0'
                  APP_KEY: '-qyExFFunSk4vSAvUiwheisaGicpYVpC'
                  DB_CONNECTION: pg
                  PG_HOST: '127.0.0.1'
                  PG_PORT: 5432
                  PG_USER: lucid
                  PG_PASSWORD: yourpassword
                  PG_DB_NAME: lucid
                  PORT: 3333
                  SESSION_DRIVER: cookie

            - name: Run client tests üß™
              run: |
                  cd packages/client
                  yarn test
              env:
                  GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
                  GOOGLE_MAPS_JAVASCRIPT_API_KEY: ${{ secrets.GOOGLE_MAPS_JAVASCRIPT_API_KEY }}
